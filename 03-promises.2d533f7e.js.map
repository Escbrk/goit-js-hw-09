{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,mBAC/BI,UAAWL,SAASC,cAAc,oBAGpC,SAASK,EAAcC,EAAUL,GAC/B,MAAMM,EAAM,C,SAAED,E,MAAUL,GAClBO,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACvBC,aAAY,KACNN,EACFI,EAAIL,GAEJM,EAAIN,EAAI,GAETN,EAAM,G,CAIbJ,EAAKO,UAAUW,iBAAiB,SAEhC,SAAkBC,GAChBA,EAAEC,iBACF,IAAIC,EAAaC,OAAOtB,EAAKI,MAAMmB,OACnC,MAAMC,EAAYF,OAAOtB,EAAKK,KAAKkB,OAC7BE,EAAcH,OAAOtB,EAAKM,OAAOiB,OAEvC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACjCA,GAAKD,IACPjB,EAAckB,EAAGL,GACdM,MAAK,EAAClB,SAAEA,EAAQL,MAAEA,MACjBN,EAAA8B,OAAOC,QAAQ,qBAAqBpB,QAAeL,MAAU,IAE9D0B,OAAM,EAACrB,SAAEA,EAAQL,MAAEA,MAClBN,EAAA8B,OAAOG,QAAQ,oBAAoBtB,QAAeL,MAAU,IAEhEiB,GAAcG,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  submitBtn: document.querySelector('[type=\"submit\"]'),\n};\n\nfunction createPromise(position, delay) {\n  const obj = { position, delay };\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((res, rej) => {\n    setInterval(() => {\n      if (shouldResolve) {\n        res(obj);\n      } else {\n        rej(obj);\n      }\n    }, delay);\n  });\n}\n\nrefs.submitBtn.addEventListener('click', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  let delayToNum = Number(refs.delay.value);\n  const stepToNum = Number(refs.step.value);\n  const amountToNum = Number(refs.amount.value);\n\n  for (let i = 1; i <= amountToNum; i += 1) {\n    if (i <= amountToNum) {\n      createPromise(i, delayToNum)\n        .then(({ position, delay }) => {\n          Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        });\n      delayToNum += stepToNum;\n    }\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","submitBtn","$47d4ff9957288465$var$createPromise","position","obj","shouldResolve","Math","random","Promise","res","rej","setInterval","addEventListener","e","preventDefault","delayToNum","Number","value","stepToNum","amountToNum","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.2d533f7e.js.map"}