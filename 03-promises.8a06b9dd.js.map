{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA6CMC,EAAO,CACXC,WAAYC,SAASC,cAAc,kBACnCC,UAAWF,SAASC,cAAc,uBAClCE,SAAUH,SAASC,cAAc,sBACjCG,UAAWJ,SAASC,cAAc,oBAEpCH,EAAKM,UAAUC,iBAAiB,SAEhC,SAAkBC,GAChBA,EAAEC,iBACF,IAAMC,EAAQC,OAAOX,EAAKC,WAAWW,QAWvC,SAAuBF,GACrB,OAAO,IAAIG,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACLhB,EAAKI,UAAUa,SACjBH,IAEEd,EAAKK,SAASY,SAChBF,G,GAEDL,E,KAlBLQ,CAAcR,GACXS,MAAK,WACJrB,EAAAsB,OAAOC,QAAQ,wBAA8BC,OAANZ,EAAM,M,IAE9Ca,OAAM,WACLzB,EAAAsB,OAAOI,QAAQ,uBAA6BF,OAANZ,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\n// const refs = {\n//   form: document.querySelector('.form'),\n//   delay: document.querySelector('[name=\"delay\"]'),\n//   step: document.querySelector('[name=\"step\"]'),\n//   amount: document.querySelector('[name=\"amount\"]'),\n//   submitBtn: document.querySelector('[type=\"submit\"]'),\n// };\n\n// function createPromise(position, delay) {\n//   const obj = { position, delay };\n//   const shouldResolve = Math.random() > 0.3;\n\n//   return new Promise((res, rej) => {\n//     setInterval(() => {\n//       if (shouldResolve) {\n//         res(obj);\n//       } else {\n//         rej(obj);\n//       }\n//     }, delay);\n//   });\n// }\n\n// refs.submitBtn.addEventListener('click', onSubmit);\n\n// function onSubmit(e) {\n//   e.preventDefault();\n//   let delayToNum = Number(refs.delay.value);\n//   const stepToNum = Number(refs.step.value);\n//   const amountToNum = Number(refs.amount.value);\n\n//   for (let i = 1; i <= amountToNum; i += 1) {\n//     createPromise(i, delayToNum)\n//       .then(({ position, delay }) => {\n//         Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n//       })\n//       .catch(({ position, delay }) => {\n//         Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n//       });\n//     delayToNum += stepToNum;\n//   }\n// }\n\nconst refs = {\n  delayInput: document.querySelector('[name=\"delay\"]'),\n  fulfilled: document.querySelector('[value=\"fulfilled\"]'),\n  rejected: document.querySelector('[value=\"rejected\"]'),\n  submitBtn: document.querySelector('[type=\"submit\"]'),\n};\nrefs.submitBtn.addEventListener('click', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const delay = Number(refs.delayInput.value);\n\n  createPromise(delay)\n    .then(() => {\n      Notify.success(`Fulfilled promise in ${delay}ms`);\n    })\n    .catch(() => {\n      Notify.failure(`Rejected promise in ${delay}ms`);\n    });\n}\n\nfunction createPromise(delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      if (refs.fulfilled.checked) {\n        res();\n      }\n      if (refs.rejected.checked) {\n        rej();\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","delayInput","document","querySelector","fulfilled","rejected","submitBtn","addEventListener","e","preventDefault","delay","Number","value","Promise","res","rej","setTimeout","checked","$ce04d3a99e08e73b$var$createPromise","then","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.8a06b9dd.js.map"}