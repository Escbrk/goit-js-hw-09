{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,mBAC/BI,UAAWL,SAASC,cAAc,oBAGpC,SAASK,EAAcC,EAAUL,GAC/B,IAAMM,EAAM,CAAED,WAAUL,SAClBO,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvBC,aAAY,WACNN,EACFI,EAAIL,GAEJM,EAAIN,E,GAELN,E,IAIPJ,EAAKO,UAAUW,iBAAiB,SAEhC,SAAkBC,GAChBA,EAAEC,iBAKF,IAJA,IAAIC,EAAaC,OAAOtB,EAAKI,MAAMmB,OAC7BC,EAAYF,OAAOtB,EAAKK,KAAKkB,OAC7BE,EAAcH,OAAOtB,EAAKM,OAAOiB,OAE9BG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACjCA,GAAKD,IACPjB,EAAckB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUL,EAAKwB,EAALxB,MACjBN,EAAA+B,OAAOC,QAAQ,qBAAoCC,OAAftB,EAAS,QAAYsB,OAAN3B,EAAM,M,IAE1D4B,OAAM,SAAAJ,G,IAAGnB,EAAQmB,EAARnB,SAAUL,EAAKwB,EAALxB,MAClBN,EAAA+B,OAAOI,QAAQ,oBAAmCF,OAAftB,EAAS,QAAYsB,OAAN3B,EAAM,M,IAE5DiB,GAAcG,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  submitBtn: document.querySelector('[type=\"submit\"]'),\n};\n\nfunction createPromise(position, delay) {\n  const obj = { position, delay };\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((res, rej) => {\n    setInterval(() => {\n      if (shouldResolve) {\n        res(obj);\n      } else {\n        rej(obj);\n      }\n    }, delay);\n  });\n}\n\nrefs.submitBtn.addEventListener('click', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  let delayToNum = Number(refs.delay.value);\n  const stepToNum = Number(refs.step.value);\n  const amountToNum = Number(refs.amount.value);\n\n  for (let i = 1; i <= amountToNum; i += 1) {\n    if (i <= amountToNum) {\n      createPromise(i, delayToNum)\n        .then(({ position, delay }) => {\n          Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        });\n      delayToNum += stepToNum;\n    }\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","submitBtn","$ce04d3a99e08e73b$var$createPromise","position","obj","shouldResolve","Math","random","Promise","res","rej","setInterval","addEventListener","e","preventDefault","delayToNum","Number","value","stepToNum","amountToNum","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.9087e194.js.map"}