{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,mBAC/BI,UAAWL,SAASC,cAAc,oBAGpC,IAAIK,EAiBJR,EAAKO,UAAUE,iBAAiB,SAEhC,SAAkBC,GAChBA,EAAEC,iBACF,MAAMC,EAAaC,OAAOb,EAAKI,MAAMU,OAC/BC,EAAYF,OAAOb,EAAKK,KAAKS,OACnC,IAAIE,EACJ,MAAMC,EAAQJ,OAAOb,EAAKM,OAAOQ,OAEjC,IAAK,IAAII,EAAI,EAAGA,EAAID,EAAOC,GAAK,EAC9BF,EAAUJ,EAAaG,EACvBI,cAAcX,GAGhBA,EAAaY,aAAY,MA7B3B,SAAuBC,EAAUjB,GAC/B,MAAMkB,EAAM,C,SAAED,E,MAAUjB,GAClBmB,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACnBL,EAEFI,EAAIL,GAGJM,EAAIN,EAAI,G,EAoBVO,CAAcjB,EAAYG,GACvBe,MAAK,EAACT,SAAEA,EAAQjB,MAAEA,MACjBN,EAAAiC,OAAOC,QAAQ,qBAAqBX,QAAejB,MAAU,IAE9D6B,OAAM,EAACZ,SAAEA,EAAQjB,MAAEA,MAClBN,EAAAiC,OAAOG,QAAQ,oBAAoBb,QAAejB,MAAU,GAC5D,GACHQ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  submitBtn: document.querySelector('[type=\"submit\"]'),\n};\n\nlet intervalId;\n\nfunction createPromise(position, delay) {\n  const obj = { position, delay };\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((res, rej) => {\n    if (shouldResolve) {\n      // Fulfill\n      res(obj);\n    } else {\n      // Reject\n      rej(obj);\n    }\n  });\n}\n\nrefs.submitBtn.addEventListener('click', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const delayToNum = Number(refs.delay.value);\n  const stepToNum = Number(refs.step.value);\n  let totalMs;\n  const toNum = Number(refs.amount.value);\n\n  for (let i = 0; i < toNum; i += 1) {\n    totalMs = delayToNum + stepToNum;\n    clearInterval(intervalId);\n  }\n\n  intervalId = setInterval(() => {\n    createPromise(delayToNum, stepToNum)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }, delayToNum);\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","submitBtn","$47d4ff9957288465$var$intervalId","addEventListener","e","preventDefault","delayToNum","Number","value","stepToNum","totalMs","toNum","i","clearInterval","setInterval","position","obj","shouldResolve","Math","random","Promise","res","rej","$47d4ff9957288465$var$createPromise","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.e72c74f7.js.map"}